@inject IDiaryService DiaryService

<div class="d-flex flex-column" style="height:96vh; overflow-x:auto;">
    <MudStack>
        <MudExpansionPanels MultiExpansion="true">
            @if (!Sections.Any())
            {
                <MudText Align="Align.Center">No sections here yet... Click "Add Section" on the sidebar to make one!</MudText>
            }
            @foreach(var section in Sections)
            {
                <DiarySectionEdit Date="Date" DiarySection="section" OnSectionUpdated="() => SaveSectionChangesAsync(section)" />
            }
        </MudExpansionPanels>
    </MudStack>
</div>

@code {
    [Parameter]
    public DateOnly Date { get; set; }
    [Parameter]
    public List<DiarySection> Sections { get; set; }
    [Parameter]
    public List<DefaultSection> DefaultSections { get; set; }

    private bool defaultsSet = false;

    protected override void OnParametersSet()
    {
        if (!Sections.Any() && DefaultSections.Any())
        {
            SetSectionsFromDefault();
        }
    }

    /// <summary>
    /// Saves the changes to the section to the diary file.
    /// If defaults were set when the sections were added, we save all the sections to the file.
    /// This prevents default sections that haven't been edited yet from disappearing when the user
    /// edits a different section.
    /// </summary>
    private async Task SaveSectionChangesAsync(DiarySection section)
    {
        bool defaultsPresent = defaultsSet && Sections.Any(x => DefaultSections.Any(y => y.DefaultTitle == x.Title));
        if (defaultsPresent)
        {
            await DiaryService.UpsertSectionsAsync(Date, Sections);
            defaultsPresent = false; // To prevent future updates from re-adding the defaults if they were removed.
            return;
        }

        await DiaryService.UpsertSectionsAsync(Date, new List<DiarySection>() { section });
    }

    private void SetSectionsFromDefault()
    {
        int index = 0;
        foreach (var section in DefaultSections)
        {
            index++;
            Sections.Add(new DiarySection() { SectionId = index, Title = section.DefaultTitle });
        }
        defaultsSet = true;
    }
}
