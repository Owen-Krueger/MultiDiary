@inject StateContainer StateContainer

<MudText><strong>Theme Preferences</strong></MudText>

<MudGrid Class="d-flex">
    <MudItem>
        <MudSwitch @bind-Checked="@UseSystemTheme" Color="Color.Primary" />
    </MudItem>
    <MudItem Class="d-flex flex-column justify-center">
        <MudText>Use System Theme</MudText>
    </MudItem>
</MudGrid>
<MudGrid Class="d-flex">
    <MudItem>
        <MudToggleIconButton @bind-Toggled="@IsDarkMode"
                             Icon="@Icons.Material.Filled.WbSunny"
                             Color="@Color.Primary" Title="Light Mode"
                             ToggledIcon="@Icons.Material.Filled.ModeNight"
                             ToggledColor="@Color.Primary" 
                             Disabled="UseSystemTheme" />
    </MudItem>
    <MudItem Class="d-flex flex-column justify-center">
        <MudText>@(IsDarkMode ? "Dark Mode" : "Light Mode")</MudText>
    </MudItem>
</MudGrid>

@code {
    /// <summary>
    /// Whether or not to use theme set by system.
    /// </summary>
    private bool UseSystemTheme
    {
        get => Preferences.Default.Get(PreferenceKeys.ThemeUseSystemTheme, true);
        set
        {
            Preferences.Default.Set(PreferenceKeys.ThemeUseSystemTheme, value);
            StateContainer.OnPreferenceChanged();
        }
    }

    /// <summary>
    /// Whether or not to use dark mode theme.
    /// </summary>
    private bool IsDarkMode
    {
        get => Preferences.Default.Get(PreferenceKeys.ThemeIsDarkMode, true);
        set
        {
            Preferences.Default.Set(PreferenceKeys.ThemeIsDarkMode, value);
            StateContainer.OnPreferenceChanged();
        }
    }
}
