@page "/"
@implements IDisposable
@inject StateContainer StateContainer
@inject IDiaryService DiaryService
@inject IDialogService DialogService

<MudDrawerContainer>
    <Sidebar />
    <div class="pa-4">
        <DiaryEntry />
    </div>
</MudDrawerContainer>

@code {
    /// <summary>
    /// Subscribes to StateContainer changes.
    /// Gets diaries from file.
    /// </summary>
    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
        DiaryService.GetDiaries();

        string error = StateContainer.Error;
        if (error == DiaryErrorConstants.FileNotFound)
        {
            ShowGettingStartedDialog();
        }
        else if (error != DiaryErrorConstants.None)
        {
            ShowErrorDialog();
        }
    }

    protected void ShowGettingStartedDialog()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = false,
            CloseButton = false,
            DisableBackdropClick = true
        };
        DialogService.Show<GettingStartedDialog>("Welcome!", options);
    }

    protected void ShowErrorDialog()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", StateContainer.Error);
        parameters.Add("ButtonText", "Okay");
        parameters.Add("Color", Color.Error);

        var dialog = DialogService.Show<SimpleDialog>("Error!", parameters);
    }

    /// <summary>
    /// Unsubscribes from StateContainer changes.
    /// </summary>
    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}